{"version":3,"sources":["components/Statistics/Statistics.module.css","App.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","Feedback__title","FeedbackOptions","options","onLeaveFeedback","map","option","type","Feedback__button","onClick","Notification","message","Stat__message","Statistics","good","neutral","bad","total","positivePercentage","amount","Stat__cont","Stat__value","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Feedback","Object","keys","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,YAAc,kC,mBCA5ED,EAAOC,QAAU,CAAC,SAAW,wB,gBCA7BD,EAAOC,QAAU,CAAC,gBAAkB,mC,gBCApCD,EAAOC,QAAU,CAAC,iBAAmB,4C,gBCArCD,EAAOC,QAAU,CAAC,cAAgB,sC,qJCkBnBC,EAhBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,oBAAIC,UAAWC,IAAOC,gBAAtB,SACKJ,IAEJC,M,gBCcEI,MApBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACrB,wBACIC,KAAK,SACLR,UAAWC,IAAOQ,iBAElBC,QAAS,kBAAML,EAAgBE,IAJnC,SAMKA,GAHIA,O,gCCKFI,MAVf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OAAO,mBAAGZ,UAAWC,IAAOY,cAArB,SACFD,KC4BME,MA7Bf,YAAyE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACxCC,EAASL,EAAOC,EAAUC,EAChC,OACI,8BACgB,IAAXG,EACG,qBAAIpB,UAAWC,IAAOoB,WAAtB,UACI,qBAAIrB,UAAWC,IAAOqB,YAAtB,mBAA0CP,KAC1C,qBAAIf,UAAWC,IAAOqB,YAAtB,sBAA6CN,KAC7C,qBAAIhB,UAAWC,IAAOqB,YAAtB,kBAAyCL,KACzC,qBAAIjB,UAAWC,IAAOqB,YAAtB,oBAA2CJ,EAAME,MACjD,qBAAIpB,UAAWC,IAAOqB,YAAtB,gCAAuDH,EAAmBC,GAA1E,UAGJ,cAAC,EAAD,CACIR,QAAQ,yBCZb,SAASW,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAoBMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GAO1B,OACI,sBAAKjB,UAAWC,IAAO4B,SAAvB,UACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS0B,OAAOC,KAAK,CAAChB,OAAMC,UAASC,QACrCZ,gBA/BY,SAAAE,GACpB,OAAQA,GACN,IAAK,OACHkB,GAAQ,SAAAO,GAAQ,OAAIA,EAAW,KAC/B,MAEF,IAAK,UACHN,GAAW,SAAAO,GAAW,OAAIA,EAAc,KACxC,MAEF,IAAK,MACHN,GAAO,SAAAO,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAoBA,cAAC,EAAD,CAASpC,MAAM,aAAf,SACE,cAAC,EAAD,CACEiB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,EACPT,mBAlB8B,WACtC,OAAOgB,KAAKC,MAAc,IAAPrB,EAAca,aC7BrCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,W","file":"static/js/main.a369b6bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stat__cont\":\"Statistics_Stat__cont__NH7tO\",\"Stat__value\":\"Statistics_Stat__value__36hRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"App_Feedback__8JVUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback__title\":\"Section_Feedback__title__2pw2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback__button\":\"FeedbackOptions_Feedback__button__xvOJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stat__message\":\"Notification_Stat__message__Rp-5R\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2 className={styles.Feedback__title}>\r\n                {title}\r\n            </h2>\r\n            {children}\r\n        </section>\r\n    );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return options.map(option => (\r\n        <button\r\n            type=\"button\"\r\n            className={styles.Feedback__button}\r\n            key={option}\r\n            onClick={() => onLeaveFeedback(option)}\r\n        >\r\n            {option}\r\n        </button>\r\n    ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(\r\n        PropTypes.string.isRequired\r\n    ),\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nfunction Notification({ message }) {\r\n    return <p className={styles.Stat__message}>\r\n        {message}\r\n    </p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\nimport Notification from '../Notification/Notification';\r\n\r\nfunction Statistics ({ good, neutral, bad, total, positivePercentage }) {\r\n    const amount = good + neutral + bad;\r\n    return (\r\n        <div>\r\n            {amount !== 0 ? (\r\n                <ul className={styles.Stat__cont}>\r\n                    <li className={styles.Stat__value}>Good: {good}</li>\r\n                    <li className={styles.Stat__value}>Neutral: {neutral}</li>\r\n                    <li className={styles.Stat__value}>Bad: {bad}</li>\r\n                    <li className={styles.Stat__value}>Total: {total(amount)}</li>\r\n                    <li className={styles.Stat__value}>Positive feedback: {positivePercentage(amount)}%</li>\r\n                </ul>\r\n            ) : (\r\n                <Notification\r\n                    message=\"No feedback given\"\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.func.isRequired,\r\n    positivePercentage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Statistics;\r\n\r\n","import {useState} from 'react';\nimport styles from './App.module.css';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const leaveFeedback = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      \n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      \n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    };\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good * 100) / countTotalFeedback());\n  };\n\n  return (\n      <div className={styles.Feedback}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys({good, neutral, bad})}\n            onLeaveFeedback={leaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />   \n        </Section>\n      </div>\n    );\n}\n\n\n\n\n// import React from 'react';\n// import styles from './App.module.css';\n// import Section from './components/Section/Section';\n// import FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n// import Statistics from './components/Statistics/Statistics';\n\n// class App extends React.Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   leaveFeedback = option => {\n//     this.setState(state => {\n//       return {\n//         [option]: state[option] + 1,\n//       }\n//     });\n//   };\n    \n//   countTotalFeedback = option => {\n//     return option;\n//   };\n\n//   countPositiveFeedbackPercentage = option => {\n//     return Math.round((this.state.good * 100) / option);\n//   };\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     return (\n//       <div className={styles.Feedback}>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={Object.keys(this.state)}\n//             onLeaveFeedback={this.leaveFeedback}\n//           />\n//         </Section>\n//         <Section title=\"Statistics\">\n//           <Statistics\n//             good={good}\n//             neutral={neutral}\n//             bad={bad}\n//             total={this.countTotalFeedback}\n//             positivePercentage={this.countPositiveFeedbackPercentage}\n//           />   \n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}